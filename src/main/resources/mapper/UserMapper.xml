<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.gxf.ioc.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.gxf.ioc.beans.User">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="queryForListMap" type="com.gxf.ioc.beans.User">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <collection property="roles" javaType="java.util.List" ofType="com.gxf.ioc.beans.Role">
            <id column="r_id" property="id" jdbcType="VARCHAR" />
            <result column="r_name" property="name" jdbcType="VARCHAR" />
            <result column="r_user_id" property="userId" jdbcType="VARCHAR" />
        </collection>
    </resultMap>
    <sql id="Base_Column_List">
        id, username, password
    </sql>

    <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=VARCHAR}
    </select>


    <select id="queryForList" resultMap="queryForListMap">
        SELECT
          u.id,
          u.username,
          u.password,
          r.id r_id,
          r.name r_name,
          r.user_id r_user_id
        FROM
          user u
        LEFT JOIN
          role r
        ON
          u.id = r.user_id
    </select>
</mapper>